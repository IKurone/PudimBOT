"""
Exemplo de como usar o Pudim Chatbot como servi√ßo para rob√¥

Este arquivo demonstra como integrar o chatbot com o c√≥digo de movimenta√ß√£o do rob√¥.
O chatbot fica carregado na mem√≥ria e √© ativado quando uma pessoa √© detectada.
"""

import time
from chatbot import (
    initialize_bot, 
    start_conversation, 
    stop_conversation, 
    ask_question, 
    speak_and_listen,
    is_bot_ready,
    get_bot_instance
)


def simulate_robot_movement():
    """Simula c√≥digo de movimenta√ß√£o do rob√¥"""
    print("ü§ñ Rob√¥ se movimentando...")
    time.sleep(2)


def simulate_person_detection():
    """Simula detec√ß√£o de pessoa"""
    print("üë§ Pessoa detectada!")
    return True


def handle_person_interaction(bot):
    """Gerencia intera√ß√£o com pessoa detectada"""
    print("üõë Parando movimenta√ß√£o - pessoa detectada!")
    
    if not is_bot_ready():
        print("‚ùå Bot n√£o est√° pronto para conversa")
        return
        
    print("üí¨ Ativando chatbot...")
    conversation_started = start_conversation(duration_minutes=3)
    
    if conversation_started:
        # Espera a conversa terminar
        while bot.conversation_active:
            time.sleep(1)
        print("‚úÖ Conversa finalizada!")
    else:
        print("‚ùå N√£o foi poss√≠vel iniciar conversa")


def main_robot_loop():
    """Loop principal do rob√¥ com integra√ß√£o do chatbot"""
    
    # Inicializa o chatbot na mem√≥ria
    print("üîÑ Inicializando chatbot na mem√≥ria...")
    bot = initialize_bot()
    
    print("‚úÖ Chatbot carregado! Status:", bot.get_status())
    print("ü§ñ Iniciando loop principal do rob√¥...")
    print("=" * 50)
    
    # Loop principal do rob√¥
    while True:
        try:
            # Simula movimenta√ß√£o do rob√¥
            simulate_robot_movement()
            
            # Verifica se detectou uma pessoa
            if simulate_person_detection():
                handle_person_interaction(bot)
                print("üîÑ Retomando movimenta√ß√£o...")
            
            # Simula intervalo entre movimentos
            time.sleep(3)
            
        except KeyboardInterrupt:
            print("\nüõë Parando rob√¥...")
            if bot.conversation_active:
                stop_conversation()
            break

def test_quick_interactions():
    """Testa intera√ß√µes r√°pidas sem conversa completa"""
    print("\n=== Teste de Intera√ß√µes R√°pidas ===")
    
    initialize_bot()
    
    # Pergunta r√°pida sem iniciar conversa completa
    response = ask_question("Que horas s√£o?")
    print(f"Resposta: {response}")
    
    # Fala algo e escuta resposta √∫nica
    response = speak_and_listen("Ol√°! Como voc√™ est√°?", timeout=5.0)
    print(f"Usu√°rio respondeu: {response}")

def test_conversation_mode():
    """Testa modo de conversa completa"""
    print("\n=== Teste de Conversa Completa ===")
    
    # Inicia conversa por 2 minutos
    if start_conversation(duration_minutes=2):
        print("Conversa iniciada! Fale com o rob√¥...")
        
        # Simula espera enquanto conversa acontece
        bot = get_bot_instance()
        while bot.conversation_active:
            time.sleep(1)
        
        print("Conversa finalizada!")

def run_test_mode():
    """Executa o modo de teste selecionado pelo usu√°rio"""
    print("ü§ñ Exemplo de Integra√ß√£o Pudim + Rob√¥")
    print("Escolha o modo de teste:")
    print("1 - Simula√ß√£o completa do rob√¥")
    print("2 - Teste de intera√ß√µes r√°pidas") 
    print("3 - Teste de conversa completa")
    
    choice = input("Digite sua escolha (1-3): ").strip()
    
    if choice == "1":
        main_robot_loop()
    elif choice == "2":
        test_quick_interactions()
    elif choice == "3":
        test_conversation_mode()
    else:
        print("Op√ß√£o inv√°lida!")


if __name__ == "__main__":
    run_test_mode()
